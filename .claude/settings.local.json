{
  "permissions": {
    "allow": [
      "Bash(npm run build:*)",
      "Bash(npm run test:*)",
      "Bash(grep:*)",
      "Bash(node:*)",
      "Bash(rm:*)",
      "Bash(chmod:*)",
      "Bash(./scripts/auto-setup-vercel.sh:*)",
      "Bash(vercel:*)",
      "Bash(git add:*)",
      "Bash(git commit:*)",
      "Bash(npm install:*)",
      "Bash(npx tsx:*)",
      "Bash(nslookup:*)",
      "Bash(tsx scripts/test-mongodb-direct.ts:*)",
      "Bash(npm run setup:mongodb:*)",
      "WebFetch(domain:accounting-automation.vercel.app)",
      "Bash(cat:*)",
      "Bash(git push:*)",
      "Bash(./scripts/deploy-vercel-direct.sh:*)",
      "Bash(npm run deploy:mastra-api:*)",
      "Bash(ls:*)",
      "Bash(curl:*)",
      "Bash(mkdir:*)",
      "Bash(touch:*)",
      "Bash(npm run dev:*)",
      "Bash(tsx scripts/test-ocr-endpoint.ts:*)",
      "Bash(mv:*)",
      "Bash(rg:*)",
      "Bash(pkill:*)",
      "Bash(openssl rand:*)",
      "Bash(./scripts/add-missing-env-vars.sh:*)",
      "Bash(sed:*)",
      "Bash(find:*)",
      "Bash(dd:*)",
      "Bash(timeout:*)",
      "WebFetch(domain:accounting-automation-b3276f9r4-effectmoes-projects.vercel.app)",
      "WebFetch(domain:accounting-automation-kappa.vercel.app)",
      "Bash(npx mongodb-connection-string-url:*)",
      "Bash(npx vercel deploy:*)",
      "Bash(cp:*)",
      "Bash(git clone:*)",
      "Bash(git rm:*)",
      "WebFetch(domain:github.com)",
      "Bash(npm run:*)",
      "Bash(./test-endpoints.sh:*)",
      "Bash(echo:*)",
      "Bash(source:*)",
      "Bash(npm uninstall:*)",
      "Bash(npx vercel:*)",
      "Bash(bash:*)",
      "Bash(./apply-aam-accounting.sh:*)",
      "Bash(./test-mcp-config.sh:*)",
      "Bash(npx ts-node:*)",
      "Bash(tsx scripts/test-mcp-servers.ts:*)",
      "Bash(npx tsc:*)",
      "Bash(launchctl load:*)",
      "Bash(DEEPSEEK_API_KEY=\"sk-97f6efd342ba4f7cb1d98e4ac26ac720\" MONGODB_URI=\"mongodb://localhost:27017/mastra-accounting\" npx tsx src/mcp-servers/accounting-mcp-server.ts)",
      "Bash(brew services:*)",
      "Bash(mongosh:*)",
      "Bash(npm ls:*)",
      "Bash(npx next lint:*)",
      "Bash(git init:*)",
      "Bash(gh repo create:*)",
      "Bash(git branch:*)",
      "Bash(git checkout:*)",
      "Bash(git merge:*)",
      "Bash([ -f .gitignore ])",
      "Bash(true)",
      "Bash(netlify:*)",
      "Bash(surge:*)",
      "Bash(npm i:*)",
      "Bash(git reset:*)",
      "Bash(git pull:*)",
      "Bash(git submodule:*)",
      "Bash(if [ -f vercel.json ])",
      "Bash(then echo \"Vercel config found:\")",
      "Bash(else echo \"No vercel.json found\")",
      "Bash(fi)",
      "Bash(if [ -d .vercel ])",
      "Bash(then echo \"Vercel project found:\")",
      "Bash(else echo \"No .vercel directory found\")",
      "Bash(MONGODB_URI=\"mongodb+srv://accounting-user:Monchan5454%40@accounting-cluster.nld0j20.mongodb.net/accounting?retryWrites=true&w=majority&appName=accounting-cluster\" node test-ai-conversation-id.js)",
      "Bash(BACKUP_DIR=\"/Users/tonychustudio/Documents/aam-orchestration/accounting-automation/backup/speech-settings-$(date +%Y%m%d_%H%M%S)\")",
      "Bash(git log:*)",
      "Bash(npx mastra:*)",
      "Bash(gtimeout:*)",
      "Bash(tsx scripts/mastra-deploy-now.ts:*)",
      "Bash(test:*)",
      "WebFetch(domain:accounting-automation-qff3ls6pp-effectmoes-projects.vercel.app)",
      "WebFetch(domain:ai-accounting-system.vercel.app)",
      "Bash(git fetch:*)",
      "Bash(./setup-mongodb-env.sh:*)",
      "Bash(tsx scripts/simple-mastra-deploy.ts:*)",
      "Bash(tsx scripts/test-structured-data.ts:*)",
      "Bash(tsx scripts/check-mongodb-vector.ts:*)",
      "Bash(MONGODB_URI=\"mongodb+srv://accounting-user:Monchan5454%40@accounting-cluster.nld0j20.mongodb.net/accounting?retryWrites=true&w=majority&appName=accounting-cluster\" npx tsx scripts/check-mongodb-vector.ts)",
      "Bash(MONGODB_URI=\"mongodb+srv://accounting-user:Monchan5454%40@accounting-cluster.nld0j20.mongodb.net/accounting?retryWrites=true&w=majority&appName=accounting-cluster\" npx tsx -e \"\nimport { MongoClient } from ''mongodb'';\nconst client = new MongoClient(process.env.MONGODB_URI);\nawait client.connect();\nconst db = client.db(''accounting'');\n\n// FAQ„Ç≥„É¨„ÇØ„Ç∑„Éß„É≥„ÅÆÊßãÈÄ†Á¢∫Ë™ç\nconst faq = await db.collection(''faq_articles'').findOne();\nconsole.log(''FAQ „Çµ„É≥„Éó„É´ÊßãÈÄ†:'', Object.keys(faq || {}));\n\n// „Éä„É¨„ÉÉ„Ç∏„Ç≥„É¨„ÇØ„Ç∑„Éß„É≥Á¢∫Ë™ç\nconst knowledgeExists = await db.collection(''knowledgeArticles'').findOne();\nconsole.log(''knowledgeArticles „Çµ„É≥„Éó„É´:'', Object.keys(knowledgeExists || {}));\n\nawait client.close();\n\")",
      "Bash(MONGODB_URI=\"mongodb+srv://accounting-user:Monchan5454%40@accounting-cluster.nld0j20.mongodb.net/accounting?retryWrites=true&w=majority&appName=accounting-cluster\" npx tsx scripts/setup-vector-search.ts)",
      "Bash(./scripts/setup-nlweb-env.sh:*)",
      "Bash(npx shadcn-ui@latest add:*)",
      "Bash(npx shadcn@latest add:*)",
      "Bash(SHELL=/bin/bash)",
      "Bash(unset SHELL)",
      "Bash(cd:*)",
      "Bash(/usr/bin/git status)",
      "Bash(export SHELL=/bin/bash)",
      "Bash(env -i bash -c \"git add .\")",
      "Bash(unset ZDOTDIR)",
      "Bash(exec /bin/bash --noprofile --norc -c \"git status\")",
      "Bash(SHELL=/bin/bash exec bash -c \"git add . && git status\")",
      "Bash(/usr/bin/git add .)",
      "Bash(/usr/bin/git commit -m \"Fix: AIÂõûÁ≠î„Åå„Äå„Äá„Äç„Å†„Åë„Å´„Å™„ÇãÂïèÈ°å„Çí‰øÆÊ≠£\n\n- „Çπ„Éà„É™„Éº„Éü„É≥„Ç∞Âá¶ÁêÜ„ÅßÁ¥ØÁ©ç„Ç≥„É≥„ÉÜ„É≥„ÉÑÂÖ®‰Ωì„ÇíÈÄÅ‰ø°„Åô„Çã„Çà„ÅÜ‰øÆÊ≠£  \n- „ÇØ„É©„Ç§„Ç¢„É≥„ÉàÂÅ¥„Åß„ÅÆÁ¥ØÁ©çÂá¶ÁêÜ„ÇíÊîπÂñÑ\n- AI„ÅÆÂÆåÂÖ®„Å™ÂõûÁ≠î„ÅåË°®Á§∫„Åï„Çå„Çã„Çà„ÅÜË™øÊï¥\n\nü§ñ Generated with [Claude Code](https://claude.ai/code)\n\nCo-Authored-By: Claude <noreply@anthropic.com>\")",
      "Bash(export:*)",
      "Bash(/bin/bash -c \"git status\")",
      "Bash(python3:*)",
      "Bash(/usr/bin/python3:*)",
      "Bash(/usr/bin/node:*)",
      "Bash(mongod:*)",
      "Bash(MONGODB_URI=\"mongodb+srv://effectmoe:Dhfgmtekd77@cluster0.h1e6k.mongodb.net/accounting-automation?retryWrites=true&w=majority&appName=Cluster0\" npm run dev)",
      "Bash(unset MONGODB_URI)",
      "Bash(dig:*)",
      "Bash(MONGODB_URI=\"mongodb+srv://effectmoe:Dhfgmtekd77@cluster0.h1e6k.mongodb.net/accounting-automation?retryWrites=true&w=majority&appName=Cluster0\" node test-mongodb-connection.js)",
      "Bash(MONGODB_URI=\"mongodb+srv://accounting-user:Monchan5454%40@accounting-cluster.nld0j20.mongodb.net/accounting?retryWrites=true&w=majority&appName=accounting-cluster\" node test-mongodb-connection.js)",
      "Bash(gh auth:*)",
      "Bash(npm bin:*)",
      "Bash(/usr/local/bin/vercel:*)",
      "Bash(npm root:*)",
      "Bash(tree:*)",
      "WebFetch(domain:accounting-automation-gemloby95-effectmoes-projects.vercel.app)",
      "WebFetch(domain:accounting-automation-awhwfywsq-effectmoes-projects.vercel.app)",
      "WebFetch(domain:vercel.com)",
      "WebFetch(domain:accounting-automation-a6nwucdpx-effectmoes-projects.vercel.app)",
      "WebFetch(domain:accounting-automation-aehf9334t-effectmoes-projects.vercel.app)",
      "WebFetch(domain:accounting-automation-effectmoes-projects.vercel.app)",
      "Bash(git restore:*)",
      "WebFetch(domain:accounting-automation-ecrmxyrdd-effectmoes-projects.vercel.app)",
      "WebFetch(domain:accounting-automation-jk8r8jfc1-effectmoes-projects.vercel.app)"
    ],
    "deny": []
  }
}