{"version":3,"file":"21ffd6b0-5b7a-437c-bf05-245031018d59.mjs","sources":["../../../src/mastra/tools/ui-tools.ts"],"sourcesContent":["import { getDatabase } from '@/lib/mongodb-client';\nimport { logger } from '@/lib/logger';\n\n/**\n * Reactコンポーネントを生成\n */\nexport const createComponentTool = {\n  name: 'create_component',\n  description: 'Reactコンポーネントを生成します',\n  parameters: {\n    type: 'object',\n    properties: {\n      component_name: { type: 'string', description: 'コンポーネント名' },\n      component_type: {\n        type: 'string',\n        enum: ['page', 'layout', 'feature', 'ui', 'form', 'chart'],\n        description: 'コンポーネントタイプ',\n      },\n      props: { type: 'array', items: { type: 'object' }, description: 'プロパティ定義' },\n      styling: { type: 'string', enum: ['tailwind', 'css-modules', 'styled-components'], description: 'スタイリング方法' },\n      features: {\n        type: 'array',\n        items: { type: 'string' },\n        description: '必要な機能（validation, animation, responsive等）',\n      },\n    },\n    required: ['component_name', 'component_type'],\n  },\n  handler: async (params: any) => {\n    logger.info('Creating React component:', params);\n    \n    const db = await getDatabase();\n    const collection = db.collection('ui_components');\n    \n    // コンポーネントの基本構造を生成\n    let componentCode = '';\n    let componentStyles = '';\n    let componentTests = '';\n    \n    // TypeScript インターフェース定義\n    const propsInterface = params.props && params.props.length > 0 ? \n      generatePropsInterface(params.component_name, params.props) : '';\n    \n    // コンポーネントタイプに応じたテンプレート生成\n    switch (params.component_type) {\n      case 'page':\n        componentCode = generatePageComponent(params.component_name, propsInterface, params.features);\n        break;\n        \n      case 'form':\n        componentCode = generateFormComponent(params.component_name, params.props, params.features);\n        break;\n        \n      case 'ui':\n        componentCode = generateUIComponent(params.component_name, propsInterface, params.styling);\n        break;\n        \n      case 'chart':\n        componentCode = generateChartComponent(params.component_name, params.features);\n        break;\n        \n      default:\n        componentCode = generateBasicComponent(params.component_name, propsInterface);\n    }\n    \n    // スタイリングの生成\n    if (params.styling === 'tailwind') {\n      componentStyles = '// Tailwind CSS classes are used inline';\n    } else if (params.styling === 'css-modules') {\n      componentStyles = generateCSSModule(params.component_name);\n    }\n    \n    // テストファイルの生成\n    componentTests = generateComponentTest(params.component_name, params.component_type);\n    \n    // コンポーネント情報を保存\n    const componentInfo = {\n      name: params.component_name,\n      type: params.component_type,\n      props: params.props || [],\n      styling: params.styling || 'tailwind',\n      features: params.features || [],\n      files: {\n        component: `${params.component_name}.tsx`,\n        styles: params.styling === 'css-modules' ? `${params.component_name}.module.css` : null,\n        test: `${params.component_name}.test.tsx`,\n      },\n      code: {\n        component: componentCode,\n        styles: componentStyles,\n        test: componentTests,\n      },\n      created_at: new Date(),\n    };\n    \n    await collection.insertOne(componentInfo);\n    \n    return {\n      success: true,\n      component_name: params.component_name,\n      files_generated: Object.values(componentInfo.files).filter(f => f !== null),\n      code: componentInfo.code,\n      usage_example: `import { ${params.component_name} } from '@/components/${params.component_name}';\n\n// 使用例\n<${params.component_name} ${params.props ? params.props.map((p: any) => `${p.name}={${p.example || 'value'}}`).join(' ') : ''} />`,\n      next_steps: [\n        'コンポーネントファイルを適切なディレクトリに保存',\n        'PropTypesまたはTypeScriptの型定義を確認',\n        'スタイリングの調整',\n        'テストの実行と追加',\n      ],\n    };\n  }\n};\n\n/**\n * フォームコンポーネントを生成\n */\nexport const createFormTool = {\n  name: 'create_form',\n  description: 'フォームコンポーネントを生成します',\n  parameters: {\n    type: 'object',\n    properties: {\n      form_name: { type: 'string', description: 'フォーム名' },\n      fields: {\n        type: 'array',\n        items: {\n          type: 'object',\n          properties: {\n            name: { type: 'string', description: 'フィールド名' },\n            type: { type: 'string', description: 'フィールドタイプ' },\n            label: { type: 'string', description: 'ラベル' },\n            validation: { type: 'object', description: 'バリデーションルール' },\n            required: { type: 'boolean', description: '必須フィールドか' },\n          },\n        },\n        description: 'フォームフィールド定義',\n      },\n      submit_action: { type: 'string', description: '送信時のアクション' },\n      use_server_action: { type: 'boolean', description: 'Server Actionを使用するか' },\n    },\n    required: ['form_name', 'fields'],\n  },\n  handler: async (params: any) => {\n    logger.info('Creating form component:', params);\n    \n    // フォームスキーマの生成（Zod）\n    const zodSchema = generateZodSchema(params.fields);\n    \n    // フォームコンポーネントの生成\n    const formComponent = `'use client';\n\nimport { useForm } from 'react-hook-form';\nimport { zodResolver } from '@hookform/resolvers/zod';\nimport { z } from 'zod';\n\n// フォームスキーマ定義\n${zodSchema}\n\ntype ${params.form_name}Data = z.infer<typeof ${params.form_name}Schema>;\n\ninterface ${params.form_name}Props {\n  onSubmit?: (data: ${params.form_name}Data) => void | Promise<void>;\n  defaultValues?: Partial<${params.form_name}Data>;\n}\n\nexport function ${params.form_name}({ onSubmit, defaultValues }: ${params.form_name}Props) {\n  const {\n    register,\n    handleSubmit,\n    formState: { errors, isSubmitting },\n    reset,\n  } = useForm<${params.form_name}Data>({\n    resolver: zodResolver(${params.form_name}Schema),\n    defaultValues,\n  });\n\n  const onFormSubmit = async (data: ${params.form_name}Data) => {\n    try {\n      ${params.use_server_action ? \n        `await ${params.submit_action}(data);` : \n        'if (onSubmit) await onSubmit(data);'}\n      reset();\n    } catch (error) {\n      console.error('Form submission error:', error);\n    }\n  };\n\n  return (\n    <form onSubmit={handleSubmit(onFormSubmit)} className=\"space-y-6\">\n      ${params.fields.map((field: any) => generateFormField(field)).join('\\n      ')}\n      \n      <button\n        type=\"submit\"\n        disabled={isSubmitting}\n        className=\"w-full bg-blue-600 text-white py-2 px-4 rounded-md hover:bg-blue-700 disabled:opacity-50 disabled:cursor-not-allowed\"\n      >\n        {isSubmitting ? '送信中...' : '送信'}\n      </button>\n    </form>\n  );\n}`;\n    \n    // Server Action の生成（必要な場合）\n    let serverAction = '';\n    if (params.use_server_action) {\n      serverAction = `'use server';\n\nimport { z } from 'zod';\nimport { revalidatePath } from 'next/cache';\n\n${zodSchema}\n\nexport async function ${params.submit_action}(data: z.infer<typeof ${params.form_name}Schema>) {\n  // バリデーション\n  const validated = ${params.form_name}Schema.parse(data);\n  \n  try {\n    // データベース操作やAPI呼び出し\n    // await db.collection('forms').insertOne(validated);\n    \n    // キャッシュの再検証\n    revalidatePath('/forms');\n    \n    return { success: true, message: 'フォームを送信しました' };\n  } catch (error) {\n    return { success: false, error: 'フォーム送信に失敗しました' };\n  }\n}`;\n    }\n    \n    return {\n      success: true,\n      form_name: params.form_name,\n      files_generated: [\n        `${params.form_name}.tsx`,\n        params.use_server_action ? `actions/${params.submit_action}.ts` : null,\n      ].filter(Boolean),\n      code: {\n        component: formComponent,\n        serverAction: serverAction,\n        schema: zodSchema,\n      },\n      validation_rules: params.fields.map((field: any) => ({\n        field: field.name,\n        rules: field.validation || { required: field.required },\n      })),\n      features: [\n        'React Hook Form統合',\n        'Zodバリデーション',\n        'TypeScript型安全性',\n        'エラーハンドリング',\n        params.use_server_action ? 'Next.js Server Actions' : null,\n      ].filter(Boolean),\n    };\n  }\n};\n\n/**\n * ダッシュボードレイアウトを生成\n */\nexport const createDashboardTool = {\n  name: 'create_dashboard',\n  description: 'ダッシュボードレイアウトを生成します',\n  parameters: {\n    type: 'object',\n    properties: {\n      dashboard_name: { type: 'string', description: 'ダッシュボード名' },\n      layout: {\n        type: 'string',\n        enum: ['grid', 'flex', 'masonry', 'custom'],\n        description: 'レイアウトタイプ',\n      },\n      widgets: {\n        type: 'array',\n        items: {\n          type: 'object',\n          properties: {\n            type: { type: 'string', description: 'ウィジェットタイプ' },\n            position: { type: 'object', description: '配置情報' },\n            size: { type: 'object', description: 'サイズ情報' },\n          },\n        },\n        description: 'ウィジェット配置',\n      },\n      responsive_breakpoints: { type: 'object', description: 'レスポンシブブレークポイント' },\n    },\n    required: ['dashboard_name', 'layout', 'widgets'],\n  },\n  handler: async (params: any) => {\n    logger.info('Creating dashboard layout:', params);\n    \n    // レイアウトスタイルの決定\n    const layoutStyles = getLayoutStyles(params.layout);\n    \n    // ウィジェットコンポーネントの生成\n    const widgetImports = params.widgets.map((widget: any, index: number) => \n      `import { ${widget.type}Widget } from '@/components/widgets/${widget.type}Widget';`\n    ).join('\\n');\n    \n    // ダッシュボードコンポーネント\n    const dashboardComponent = `import { useState, useEffect } from 'react';\n${widgetImports}\n\ninterface ${params.dashboard_name}Props {\n  userId?: string;\n  timeRange?: 'day' | 'week' | 'month' | 'year';\n}\n\nexport function ${params.dashboard_name}({ userId, timeRange = 'month' }: ${params.dashboard_name}Props) {\n  const [isLoading, setIsLoading] = useState(true);\n  const [data, setData] = useState<any>(null);\n\n  useEffect(() => {\n    // ダッシュボードデータの取得\n    fetchDashboardData();\n  }, [userId, timeRange]);\n\n  const fetchDashboardData = async () => {\n    try {\n      // API呼び出しまたはデータ取得ロジック\n      setIsLoading(false);\n    } catch (error) {\n      console.error('Dashboard data fetch error:', error);\n      setIsLoading(false);\n    }\n  };\n\n  if (isLoading) {\n    return <DashboardSkeleton />;\n  }\n\n  return (\n    <div className=\"${layoutStyles.container}\">\n      <div className=\"${layoutStyles.header}\">\n        <h1 className=\"text-2xl font-bold\">ダッシュボード</h1>\n        <TimeRangeSelector value={timeRange} onChange={() => {}} />\n      </div>\n      \n      <div className=\"${layoutStyles.grid}\">\n        ${params.widgets.map((widget: any, index: number) => `\n        <div className=\"${getWidgetClasses(widget, params.layout)}\">\n          <${widget.type}Widget \n            data={data?.${widget.type.toLowerCase()}} \n            loading={isLoading}\n          />\n        </div>`).join('')}\n      </div>\n    </div>\n  );\n}\n\n// スケルトンローダー\nfunction DashboardSkeleton() {\n  return (\n    <div className=\"animate-pulse\">\n      <div className=\"h-8 bg-gray-200 rounded w-1/4 mb-4\"></div>\n      <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\">\n        {[...Array(6)].map((_, i) => (\n          <div key={i} className=\"h-48 bg-gray-200 rounded\"></div>\n        ))}\n      </div>\n    </div>\n  );\n}\n\n// 時間範囲セレクター\nfunction TimeRangeSelector({ value, onChange }: any) {\n  return (\n    <select\n      value={value}\n      onChange={(e) => onChange(e.target.value)}\n      className=\"border rounded px-3 py-1\"\n    >\n      <option value=\"day\">今日</option>\n      <option value=\"week\">今週</option>\n      <option value=\"month\">今月</option>\n      <option value=\"year\">今年</option>\n    </select>\n  );\n}`;\n    \n    // ウィジェットのサンプルコード\n    const sampleWidget = `interface ${params.widgets[0]?.type}WidgetProps {\n  data?: any;\n  loading?: boolean;\n}\n\nexport function ${params.widgets[0]?.type}Widget({ data, loading }: ${params.widgets[0]?.type}WidgetProps) {\n  if (loading) {\n    return <div className=\"animate-pulse h-full bg-gray-200 rounded\" />;\n  }\n\n  return (\n    <div className=\"bg-white rounded-lg shadow p-6\">\n      <h3 className=\"text-lg font-semibold mb-4\">${params.widgets[0]?.type}</h3>\n      <div className=\"space-y-2\">\n        {/* ウィジェットコンテンツ */}\n      </div>\n    </div>\n  );\n}`;\n    \n    return {\n      success: true,\n      dashboard_name: params.dashboard_name,\n      layout_type: params.layout,\n      widgets_count: params.widgets.length,\n      code: {\n        dashboard: dashboardComponent,\n        sampleWidget: sampleWidget,\n      },\n      responsive_features: [\n        'モバイルファースト設計',\n        '適応的グリッドレイアウト',\n        'タッチ対応インタラクション',\n        'レスポンシブフォントサイズ',\n      ],\n      performance_optimizations: [\n        'ウィジェットの遅延読み込み',\n        'データの段階的取得',\n        'メモ化による再レンダリング最適化',\n        'スケルトンローダー',\n      ],\n      next_steps: [\n        '各ウィジェットコンポーネントの実装',\n        'データフェッチングロジックの実装',\n        'リアルタイム更新の追加（必要に応じて）',\n        'アクセシビリティの確認',\n      ],\n    };\n  }\n};\n\n// ヘルパー関数\nfunction generatePropsInterface(componentName: string, props: any[]): string {\n  if (!props || props.length === 0) return '';\n  \n  const propsDefinition = props.map(prop => \n    `  ${prop.name}${prop.required ? '' : '?'}: ${prop.type || 'any'};`\n  ).join('\\n');\n  \n  return `interface ${componentName}Props {\n${propsDefinition}\n}`;\n}\n\nfunction generatePageComponent(name: string, propsInterface: string, features: string[]): string {\n  return `'use client';\n\nimport { useState, useEffect } from 'react';\n${features?.includes('animation') ? \"import { motion } from 'framer-motion';\" : ''}\n\n${propsInterface}\n\nexport default function ${name}Page(${propsInterface ? `props: ${name}Props` : ''}) {\n  const [isLoading, setIsLoading] = useState(true);\n\n  useEffect(() => {\n    // ページデータの初期化\n    setIsLoading(false);\n  }, []);\n\n  return (\n    <div className=\"container mx-auto px-4 py-8\">\n      <h1 className=\"text-3xl font-bold mb-6\">${name}</h1>\n      \n      {isLoading ? (\n        <div className=\"flex justify-center items-center h-64\">\n          <div className=\"animate-spin rounded-full h-12 w-12 border-b-2 border-blue-600\"></div>\n        </div>\n      ) : (\n        <div className=\"space-y-6\">\n          {/* ページコンテンツ */}\n        </div>\n      )}\n    </div>\n  );\n}`;\n}\n\nfunction generateFormComponent(name: string, fields: any[], features: string[]): string {\n  // フォームコンポーネントの詳細実装は createFormTool で行う\n  return `// Form component implementation\n// See createFormTool for detailed form generation`;\n}\n\nfunction generateUIComponent(name: string, propsInterface: string, styling: string): string {\n  const styleImport = styling === 'css-modules' ? \n    `import styles from './${name}.module.css';` : '';\n  \n  return `import React from 'react';\n${styleImport}\n\n${propsInterface}\n\nexport function ${name}(${propsInterface ? `props: ${name}Props` : ''}) {\n  return (\n    <div className=\"${styling === 'tailwind' ? 'rounded-lg shadow-md p-4' : 'styles.container'}\">\n      {/* UIコンポーネントの実装 */}\n    </div>\n  );\n}`;\n}\n\nfunction generateChartComponent(name: string, features: string[]): string {\n  return `import { useEffect, useRef } from 'react';\nimport { Chart, registerables } from 'chart.js';\n\nChart.register(...registerables);\n\ninterface ${name}Props {\n  data: any;\n  type?: 'line' | 'bar' | 'pie' | 'doughnut';\n  options?: any;\n}\n\nexport function ${name}({ data, type = 'line', options }: ${name}Props) {\n  const chartRef = useRef<HTMLCanvasElement>(null);\n  const chartInstance = useRef<Chart | null>(null);\n\n  useEffect(() => {\n    if (!chartRef.current) return;\n\n    // 既存のチャートを破棄\n    if (chartInstance.current) {\n      chartInstance.current.destroy();\n    }\n\n    // 新しいチャートを作成\n    const ctx = chartRef.current.getContext('2d');\n    if (ctx) {\n      chartInstance.current = new Chart(ctx, {\n        type,\n        data,\n        options: {\n          responsive: true,\n          maintainAspectRatio: false,\n          ...options,\n        },\n      });\n    }\n\n    return () => {\n      if (chartInstance.current) {\n        chartInstance.current.destroy();\n      }\n    };\n  }, [data, type, options]);\n\n  return (\n    <div className=\"relative h-64 w-full\">\n      <canvas ref={chartRef}></canvas>\n    </div>\n  );\n}`;\n}\n\nfunction generateBasicComponent(name: string, propsInterface: string): string {\n  return `import React from 'react';\n\n${propsInterface}\n\nexport function ${name}(${propsInterface ? `props: ${name}Props` : ''}) {\n  return (\n    <div>\n      <h2>${name} Component</h2>\n      {/* コンポーネントの実装 */}\n    </div>\n  );\n}`;\n}\n\nfunction generateCSSModule(componentName: string): string {\n  return `.container {\n  padding: 1rem;\n  border-radius: 0.5rem;\n  box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);\n}\n\n.title {\n  font-size: 1.5rem;\n  font-weight: bold;\n  margin-bottom: 1rem;\n}\n\n.content {\n  color: #333;\n}\n\n@media (max-width: 768px) {\n  .container {\n    padding: 0.5rem;\n  }\n}`;\n}\n\nfunction generateComponentTest(componentName: string, componentType: string): string {\n  return `import { render, screen } from '@testing-library/react';\nimport { ${componentName} } from './${componentName}';\n\ndescribe('${componentName}', () => {\n  it('renders without crashing', () => {\n    render(<${componentName} />);\n  });\n\n  it('displays correct content', () => {\n    render(<${componentName} />);\n    // テストアサーション\n  });\n\n  ${componentType === 'form' ? `\n  it('handles form submission', async () => {\n    const onSubmit = jest.fn();\n    render(<${componentName} onSubmit={onSubmit} />);\n    \n    // フォーム送信テスト\n  });` : ''}\n});`;\n}\n\nfunction generateZodSchema(fields: any[]): string {\n  const schemaFields = fields.map(field => {\n    let validation = `z.${field.type || 'string'}()`;\n    \n    if (field.validation) {\n      if (field.validation.min) validation += `.min(${field.validation.min})`;\n      if (field.validation.max) validation += `.max(${field.validation.max})`;\n      if (field.validation.email) validation = `z.string().email()`;\n      if (field.validation.url) validation = `z.string().url()`;\n    }\n    \n    if (!field.required) validation += `.optional()`;\n    \n    return `  ${field.name}: ${validation},`;\n  }).join('\\n');\n  \n  return `const ${fields[0]?.formName || 'form'}Schema = z.object({\n${schemaFields}\n});`;\n}\n\nfunction generateFormField(field: any): string {\n  const fieldType = field.type || 'text';\n  const baseClasses = 'w-full px-3 py-2 border rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500';\n  \n  if (fieldType === 'textarea') {\n    return `<div>\n        <label htmlFor=\"${field.name}\" className=\"block text-sm font-medium text-gray-700 mb-1\">\n          ${field.label}${field.required ? ' *' : ''}\n        </label>\n        <textarea\n          id=\"${field.name}\"\n          {...register('${field.name}')}\n          className=\"${baseClasses}\"\n          rows={4}\n        />\n        {errors.${field.name} && (\n          <p className=\"mt-1 text-sm text-red-600\">{errors.${field.name}.message}</p>\n        )}\n      </div>`;\n  }\n  \n  if (fieldType === 'select' && field.options) {\n    return `<div>\n        <label htmlFor=\"${field.name}\" className=\"block text-sm font-medium text-gray-700 mb-1\">\n          ${field.label}${field.required ? ' *' : ''}\n        </label>\n        <select\n          id=\"${field.name}\"\n          {...register('${field.name}')}\n          className=\"${baseClasses}\"\n        >\n          <option value=\"\">選択してください</option>\n          ${field.options.map((opt: any) => \n            `<option value=\"${opt.value}\">${opt.label}</option>`\n          ).join('\\n          ')}\n        </select>\n        {errors.${field.name} && (\n          <p className=\"mt-1 text-sm text-red-600\">{errors.${field.name}.message}</p>\n        )}\n      </div>`;\n  }\n  \n  return `<div>\n        <label htmlFor=\"${field.name}\" className=\"block text-sm font-medium text-gray-700 mb-1\">\n          ${field.label}${field.required ? ' *' : ''}\n        </label>\n        <input\n          id=\"${field.name}\"\n          type=\"${fieldType}\"\n          {...register('${field.name}')}\n          className=\"${baseClasses}\"\n        />\n        {errors.${field.name} && (\n          <p className=\"mt-1 text-sm text-red-600\">{errors.${field.name}.message}</p>\n        )}\n      </div>`;\n}\n\nfunction getLayoutStyles(layout: string): any {\n  const styles: Record<string, any> = {\n    grid: {\n      container: 'p-6',\n      header: 'flex justify-between items-center mb-6',\n      grid: 'grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4',\n    },\n    flex: {\n      container: 'p-6',\n      header: 'flex justify-between items-center mb-6',\n      grid: 'flex flex-wrap gap-4',\n    },\n    masonry: {\n      container: 'p-6',\n      header: 'flex justify-between items-center mb-6',\n      grid: 'columns-1 md:columns-2 lg:columns-3 gap-4',\n    },\n  };\n  \n  return styles[layout] || styles.grid;\n}\n\nfunction getWidgetClasses(widget: any, layout: string): string {\n  const sizeClasses: Record<string, string> = {\n    small: 'col-span-1',\n    medium: 'col-span-1 md:col-span-2',\n    large: 'col-span-1 md:col-span-2 lg:col-span-3',\n  };\n  \n  if (layout === 'grid') {\n    return sizeClasses[widget.size?.type || 'medium'];\n  }\n  \n  return 'w-full md:w-1/2 lg:w-1/3';\n}\n\n// すべてのツールをエクスポート\nexport const uiTools = [\n  createComponentTool,\n  createFormTool,\n  createDashboardTool,\n];"],"names":[],"mappings":"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"}