{"version":3,"file":"4e21964f-3b90-42b0-9173-b58d2a2afbd5.mjs","sources":["../../../src/mastra/tools/problem-solving-tools.ts"],"sourcesContent":["import { getDatabase } from '@/lib/mongodb-client';\nimport { logger } from '@/lib/logger';\n\n/**\n * エラーを診断\n */\nexport const diagnoseErrorTool = {\n  name: 'diagnose_error',\n  description: 'エラーを診断します',\n  parameters: {\n    type: 'object',\n    properties: {\n      error_message: { type: 'string', description: 'エラーメッセージ' },\n      stack_trace: { type: 'string', description: 'スタックトレース' },\n      context: {\n        type: 'object',\n        properties: {\n          environment: { type: 'string', description: '実行環境' },\n          recent_changes: { type: 'array', items: { type: 'string' }, description: '最近の変更' },\n          system_info: { type: 'object', description: 'システム情報' },\n        },\n      },\n      severity: {\n        type: 'string',\n        enum: ['critical', 'high', 'medium', 'low'],\n        description: '深刻度',\n      },\n    },\n    required: ['error_message'],\n  },\n  handler: async (params: any) => {\n    logger.info('Diagnosing error:', params);\n    \n    const db = await getDatabase();\n    const collection = db.collection('error_diagnostics');\n    \n    // エラーパターンの分析\n    const errorPatterns = [\n      {\n        pattern: /TypeError.*undefined/i,\n        category: 'Type Error',\n        common_causes: ['Null/undefined参照', 'オブジェクトプロパティの誤り', '非同期処理の不備'],\n        solutions: ['Null チェックの追加', 'Optional chaining の使用', 'デフォルト値の設定'],\n      },\n      {\n        pattern: /Cannot connect to database/i,\n        category: 'Database Connection',\n        common_causes: ['接続文字列の誤り', 'ネットワーク問題', '認証エラー', 'サービス停止'],\n        solutions: ['接続文字列の確認', 'ファイアウォール設定の確認', '認証情報の更新'],\n      },\n      {\n        pattern: /Memory limit exceeded/i,\n        category: 'Memory Issue',\n        common_causes: ['メモリリーク', '大量データ処理', '無限ループ'],\n        solutions: ['ページネーションの実装', 'ストリーミング処理', 'メモリプロファイリング'],\n      },\n      {\n        pattern: /Permission denied/i,\n        category: 'Permission Error',\n        common_causes: ['ファイルアクセス権限', 'API権限不足', 'ユーザー権限'],\n        solutions: ['適切な権限の付与', 'sudo/管理者権限での実行', 'アクセス制御の見直し'],\n      },\n    ];\n    \n    // エラーメッセージからパターンを検出\n    let diagnosis: any = {\n      error_message: params.error_message,\n      severity: params.severity || 'medium',\n      timestamp: new Date(),\n      diagnosed_issues: [],\n      recommended_actions: [],\n    };\n    \n    for (const pattern of errorPatterns) {\n      if (pattern.pattern.test(params.error_message)) {\n        diagnosis.error_category = pattern.category;\n        diagnosis.common_causes = pattern.common_causes;\n        diagnosis.solutions = pattern.solutions;\n        break;\n      }\n    }\n    \n    // スタックトレースの分析\n    if (params.stack_trace) {\n      const stackLines = params.stack_trace.split('\\n');\n      const relevantLines = stackLines.slice(0, 5); // 最初の5行が最も重要\n      \n      diagnosis.stack_analysis = {\n        error_location: relevantLines[0],\n        call_chain: relevantLines.slice(1, 4),\n        framework_detected: detectFramework(params.stack_trace),\n      };\n    }\n    \n    // 環境別の推奨事項\n    if (params.context?.environment) {\n      switch (params.context.environment) {\n        case 'production':\n          diagnosis.recommended_actions.push(\n            'エラーモニタリングツールの確認',\n            'ロールバック計画の準備',\n            'ユーザー影響の評価',\n          );\n          break;\n        case 'development':\n          diagnosis.recommended_actions.push(\n            'デバッガーの使用',\n            'ユニットテストの追加',\n            'コードレビューの実施',\n          );\n          break;\n      }\n    }\n    \n    // 診断結果の保存\n    await collection.insertOne(diagnosis);\n    \n    // 類似エラーの検索\n    const similarErrors = await collection.find({\n      error_category: diagnosis.error_category,\n      _id: { $ne: diagnosis._id },\n    }).limit(3).toArray();\n    \n    if (similarErrors.length > 0) {\n      diagnosis.similar_cases = similarErrors.map(err => ({\n        error_message: err.error_message,\n        resolved: err.resolved || false,\n        resolution: err.resolution,\n      }));\n    }\n    \n    return {\n      success: true,\n      diagnosis: diagnosis,\n      immediate_actions: diagnosis.solutions || ['エラーログの詳細確認', 'システム状態の確認'],\n      monitoring: {\n        should_alert_team: params.severity === 'critical' || params.severity === 'high',\n        should_create_incident: params.severity === 'critical',\n        recommended_sla: params.severity === 'critical' ? '1時間以内' : '24時間以内',\n      },\n    };\n  }\n};\n\n/**\n * 根本原因分析を実行\n */\nexport const performRootCauseAnalysisTool = {\n  name: 'perform_root_cause_analysis',\n  description: '根本原因分析を実行します',\n  parameters: {\n    type: 'object',\n    properties: {\n      incident_description: { type: 'string', description: 'インシデントの説明' },\n      symptoms: {\n        type: 'array',\n        items: { type: 'string' },\n        description: '症状リスト',\n      },\n      timeline: {\n        type: 'array',\n        items: {\n          type: 'object',\n          properties: {\n            time: { type: 'string', description: '時刻' },\n            event: { type: 'string', description: 'イベント' },\n          },\n        },\n        description: 'タイムライン',\n      },\n      affected_systems: { type: 'array', items: { type: 'string' }, description: '影響を受けたシステム' },\n    },\n    required: ['incident_description', 'symptoms'],\n  },\n  handler: async (params: any) => {\n    logger.info('Performing root cause analysis:', params);\n    \n    const db = await getDatabase();\n    const collection = db.collection('root_cause_analyses');\n    \n    // 5 Whys 分析の実施\n    const fiveWhysAnalysis = performFiveWhys(params.incident_description, params.symptoms);\n    \n    // Fishbone (Ishikawa) 分析\n    const fishboneAnalysis = {\n      main_problem: params.incident_description,\n      categories: {\n        people: ['スキル不足', 'コミュニケーション不足', 'トレーニング不足'],\n        process: ['手順の不備', 'レビュー不足', 'テスト不足'],\n        technology: ['システム設計の問題', 'ツールの不備', '技術的負債'],\n        environment: ['インフラの問題', '外部依存', 'リソース不足'],\n      },\n    };\n    \n    // タイムライン分析\n    let criticalEvents: any[] = [];\n    if (params.timeline && params.timeline.length > 0) {\n      // イベントの重要度を判定\n      criticalEvents = params.timeline.filter((event: any) => \n        event.event.toLowerCase().includes('error') ||\n        event.event.toLowerCase().includes('failure') ||\n        event.event.toLowerCase().includes('down')\n      );\n    }\n    \n    // 影響分析\n    const impactAnalysis = {\n      affected_systems: params.affected_systems || [],\n      estimated_impact: calculateImpact(params.affected_systems),\n      blast_radius: params.affected_systems?.length || 0,\n    };\n    \n    // 根本原因の推定\n    const rootCauses = [\n      {\n        cause: 'コード変更による回帰',\n        probability: 0.7,\n        evidence: ['最近のデプロイメント', 'テストカバレッジ不足'],\n        prevention: ['回帰テストの強化', 'デプロイメント前の検証強化'],\n      },\n      {\n        cause: 'インフラストラクチャの問題',\n        probability: 0.5,\n        evidence: ['複数システムへの影響', 'ネットワーク関連のエラー'],\n        prevention: ['冗長性の確保', 'モニタリングの強化'],\n      },\n      {\n        cause: '外部サービスの障害',\n        probability: 0.3,\n        evidence: ['API呼び出しエラー', 'タイムアウト'],\n        prevention: ['サーキットブレーカーの実装', 'フォールバック戦略'],\n      },\n    ];\n    \n    // 分析結果の保存\n    const analysis = {\n      incident_description: params.incident_description,\n      symptoms: params.symptoms,\n      timeline: params.timeline,\n      five_whys: fiveWhysAnalysis,\n      fishbone: fishboneAnalysis,\n      critical_events: criticalEvents,\n      impact_analysis: impactAnalysis,\n      root_causes: rootCauses.sort((a, b) => b.probability - a.probability),\n      created_at: new Date(),\n    };\n    \n    await collection.insertOne(analysis);\n    \n    return {\n      success: true,\n      root_cause_analysis: {\n        most_likely_cause: rootCauses[0],\n        all_potential_causes: rootCauses,\n        five_whys_result: fiveWhysAnalysis,\n        critical_timeline_events: criticalEvents,\n      },\n      recommendations: {\n        immediate: [\n          '最も可能性の高い原因から対処を開始',\n          '影響を受けたシステムの健全性確認',\n          'ステークホルダーへの状況報告',\n        ],\n        short_term: [\n          '暫定対策の実施',\n          'モニタリングの強化',\n          '関連ドキュメントの更新',\n        ],\n        long_term: rootCauses[0].prevention,\n      },\n      action_items: generateActionItems(rootCauses[0]),\n    };\n  }\n};\n\n/**\n * 予防措置を提案\n */\nexport const suggestPreventiveMeasuresTool = {\n  name: 'suggest_preventive_measures',\n  description: '予防措置を提案します',\n  parameters: {\n    type: 'object',\n    properties: {\n      problem_type: {\n        type: 'string',\n        enum: ['performance', 'security', 'reliability', 'scalability', 'maintenance'],\n        description: '問題タイプ',\n      },\n      current_state: { type: 'object', description: '現在の状態' },\n      risk_assessment: {\n        type: 'object',\n        properties: {\n          likelihood: { type: 'string', enum: ['low', 'medium', 'high'], description: '発生可能性' },\n          impact: { type: 'string', enum: ['low', 'medium', 'high'], description: '影響度' },\n        },\n      },\n    },\n    required: ['problem_type', 'current_state'],\n  },\n  handler: async (params: any) => {\n    logger.info('Suggesting preventive measures:', params);\n    \n    const measures: any = {\n      problem_type: params.problem_type,\n      risk_level: calculateRiskLevel(params.risk_assessment),\n      preventive_measures: [],\n      implementation_plan: [],\n      estimated_effort: '',\n    };\n    \n    // 問題タイプ別の予防措置\n    switch (params.problem_type) {\n      case 'performance':\n        measures.preventive_measures = [\n          {\n            measure: 'パフォーマンステストの定期実行',\n            description: '負荷テストとベンチマークの自動化',\n            priority: 'high',\n            tools: ['JMeter', 'Gatling', 'K6'],\n          },\n          {\n            measure: 'APMツールの導入',\n            description: 'アプリケーションパフォーマンスの継続的監視',\n            priority: 'high',\n            tools: ['New Relic', 'Datadog', 'AppDynamics'],\n          },\n          {\n            measure: 'コードプロファイリング',\n            description: 'ボトルネックの特定と最適化',\n            priority: 'medium',\n            tools: ['Chrome DevTools', 'Visual Studio Profiler'],\n          },\n        ];\n        measures.estimated_effort = '2-4週間';\n        break;\n        \n      case 'security':\n        measures.preventive_measures = [\n          {\n            measure: 'セキュリティ監査の実施',\n            description: '定期的な脆弱性スキャンとペネトレーションテスト',\n            priority: 'critical',\n            frequency: '四半期ごと',\n          },\n          {\n            measure: 'SAST/DASTツールの導入',\n            description: 'CI/CDパイプラインでのセキュリティチェック',\n            priority: 'high',\n            tools: ['SonarQube', 'OWASP ZAP', 'Snyk'],\n          },\n          {\n            measure: 'セキュリティトレーニング',\n            description: '開発チームへの定期的なセキュリティ教育',\n            priority: 'medium',\n            frequency: '半年ごと',\n          },\n        ];\n        measures.estimated_effort = '3-6週間';\n        break;\n        \n      case 'reliability':\n        measures.preventive_measures = [\n          {\n            measure: 'カオスエンジニアリング',\n            description: 'システムの耐障害性テスト',\n            priority: 'medium',\n            tools: ['Chaos Monkey', 'Gremlin'],\n          },\n          {\n            measure: '自動フェイルオーバー',\n            description: '障害時の自動切り替え機構',\n            priority: 'high',\n            implementation: ['冗長構成', 'ヘルスチェック', '自動復旧'],\n          },\n          {\n            measure: 'SLO/SLAの設定と監視',\n            description: 'サービスレベル目標の定義と追跡',\n            priority: 'high',\n            metrics: ['可用性', 'レスポンスタイム', 'エラー率'],\n          },\n        ];\n        measures.estimated_effort = '4-8週間';\n        break;\n    }\n    \n    // 実装計画の生成\n    measures.implementation_plan = [\n      {\n        phase: 'Assessment',\n        duration: '1週間',\n        activities: ['現状分析', 'ギャップ分析', 'リスク評価'],\n      },\n      {\n        phase: 'Planning',\n        duration: '1週間',\n        activities: ['詳細計画策定', 'リソース確保', 'スケジューリング'],\n      },\n      {\n        phase: 'Implementation',\n        duration: '2-4週間',\n        activities: ['ツール導入', 'プロセス構築', 'チーム教育'],\n      },\n      {\n        phase: 'Monitoring',\n        duration: '継続的',\n        activities: ['効果測定', '改善活動', 'レポーティング'],\n      },\n    ];\n    \n    // ROI計算\n    measures.expected_benefits = {\n      risk_reduction: '60-80%',\n      incident_prevention_rate: '70%',\n      mttr_improvement: '40%削減',\n      cost_savings: '年間インシデント対応コストの50%削減',\n    };\n    \n    return {\n      success: true,\n      preventive_measures: measures,\n      priority_actions: measures.preventive_measures.filter((m: any) => m.priority === 'high' || m.priority === 'critical'),\n      quick_wins: measures.preventive_measures.filter((m: any) => m.priority === 'medium'),\n      investment_required: {\n        time: measures.estimated_effort,\n        budget: 'プロジェクト規模による',\n        resources: '2-3名の専任エンジニア',\n      },\n    };\n  }\n};\n\n// ヘルパー関数\nfunction detectFramework(stackTrace: string): string {\n  if (stackTrace.includes('node_modules/react')) return 'React';\n  if (stackTrace.includes('node_modules/vue')) return 'Vue';\n  if (stackTrace.includes('node_modules/angular')) return 'Angular';\n  if (stackTrace.includes('node_modules/express')) return 'Express';\n  if (stackTrace.includes('node_modules/next')) return 'Next.js';\n  return 'Unknown';\n}\n\nfunction performFiveWhys(problem: string, symptoms: string[]): any {\n  return {\n    problem: problem,\n    why1: '症状: ' + symptoms[0],\n    why2: '直接的な原因の可能性',\n    why3: 'プロセスまたはシステムの問題',\n    why4: '組織的な課題',\n    why5: '根本的な原因',\n  };\n}\n\nfunction calculateImpact(affectedSystems: string[]): string {\n  if (!affectedSystems) return 'Low';\n  if (affectedSystems.length >= 5) return 'Critical';\n  if (affectedSystems.length >= 3) return 'High';\n  if (affectedSystems.length >= 1) return 'Medium';\n  return 'Low';\n}\n\nfunction calculateRiskLevel(riskAssessment: any): string {\n  if (!riskAssessment) return 'Medium';\n  const { likelihood, impact } = riskAssessment;\n  \n  if (likelihood === 'high' && impact === 'high') return 'Critical';\n  if (likelihood === 'high' || impact === 'high') return 'High';\n  if (likelihood === 'low' && impact === 'low') return 'Low';\n  return 'Medium';\n}\n\nfunction generateActionItems(rootCause: any): string[] {\n  return [\n    `${rootCause.cause}の詳細調査`,\n    `予防措置の実装: ${rootCause.prevention[0]}`,\n    'インシデントレポートの作成と共有',\n    'チームでの振り返りミーティングの実施',\n    'ランブックの更新',\n  ];\n}\n\n// すべてのツールをエクスポート\nexport const problemSolvingTools = [\n  diagnoseErrorTool,\n  performRootCauseAnalysisTool,\n  suggestPreventiveMeasuresTool,\n];"],"names":[],"mappings":"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"}