import { Mastra } from "@mastra/core";
declare const mastra: Mastra<{
    accountingAgent: import("@mastra/core").Agent<"mastra-accounting-agent", Record<string, import("@mastra/core").ToolAction<any, any, any>>, Record<string, import("@mastra/core").Metric>>;
    customerAgent: import("@mastra/core").Agent<"mastra-customer-agent", Record<string, import("@mastra/core").ToolAction<any, any, any>>, Record<string, import("@mastra/core").Metric>>;
    databaseAgent: import("@mastra/core").Agent<"mastra-database-agent", Record<string, import("@mastra/core").ToolAction<any, any, any>>, Record<string, import("@mastra/core").Metric>>;
    deploymentAgent: import("@mastra/core").Agent<"mastra-deployment-agent", Record<string, import("@mastra/core").ToolAction<any, any, any>>, Record<string, import("@mastra/core").Metric>>;
    japanTaxAgent: import("@mastra/core").Agent<"mastra-japan-tax-agent", Record<string, import("@mastra/core").ToolAction<any, any, any>>, Record<string, import("@mastra/core").Metric>>;
    ocrAgent: import("@mastra/core").Agent<"mastra-ocr-agent", Record<string, import("@mastra/core").ToolAction<any, any, any>>, Record<string, import("@mastra/core").Metric>>;
    problemSolvingAgent: import("@mastra/core").Agent<"mastra-problem-solving-agent", Record<string, import("@mastra/core").ToolAction<any, any, any>>, Record<string, import("@mastra/core").Metric>>;
    productAgent: import("@mastra/core").Agent<"mastra-product-agent", Record<string, import("@mastra/core").ToolAction<any, any, any>>, Record<string, import("@mastra/core").Metric>>;
    refactorAgent: import("@mastra/core").Agent<"mastra-refactor-agent", Record<string, import("@mastra/core").ToolAction<any, any, any>>, Record<string, import("@mastra/core").Metric>>;
    uiAgent: import("@mastra/core").Agent<"mastra-ui-agent", Record<string, import("@mastra/core").ToolAction<any, any, any>>, Record<string, import("@mastra/core").Metric>>;
    constructionAgent: import("@mastra/core").Agent<"mastra-construction-agent", Record<string, import("@mastra/core").ToolAction<any, any, any>>, Record<string, import("@mastra/core").Metric>>;
}, Record<string, import("@mastra/core/dist/base-5ZyKaTRr").L<import("@mastra/core/dist/base-5ZyKaTRr").d<string, any, any, import("@mastra/core/dist/base-5ZyKaTRr").S<any, import("@mastra/core/dist/base-5ZyKaTRr").W<any, import("@mastra/core/dist/base-5ZyKaTRr").d<string, any, any, any>[], Record<string, any>>>>[], string, any, any>>, Record<string, import("@mastra/core/dist/base-5ZyKaTRr").e<any, import("@mastra/core").Step<string, any, any, any, any, any>[], string, import("zod").ZodType<any, import("zod").ZodTypeDef, any>, import("zod").ZodType<any, import("zod").ZodTypeDef, any>, import("zod").ZodType<any, import("zod").ZodTypeDef, any>>>, Record<string, import("@mastra/core/dist/vector").MastraVector<import("@mastra/core/dist/vector/filter").VectorFilter>>, Record<string, import("@mastra/core/dist/tts").MastraTTS>, import("@mastra/core/dist/logger-Bpa2oLL4").I, Record<string, import("@mastra/core/dist/base-5ZyKaTRr").g>, Record<string, import("@mastra/core/dist/base-5ZyKaTRr").N>, Record<string, import("@mastra/core/dist/base-5ZyKaTRr").h>>;
export { mastra };
export default mastra;
