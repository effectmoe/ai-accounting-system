
> mastra-accounting-automation@1.0.1 dev
> next dev

  ‚ñ≤ Next.js 14.2.21
  - Local:        http://localhost:3000
  - Environments: .env.local, .env

 ‚úì Starting...
 ‚úì Ready in 1870ms
 ‚úì Compiled /middleware in 161ms (117 modules)
 ‚óã Compiling /api/dashboard/metrics ...
 ‚ö† ./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/instrumentation.js
Critical dependency: the request of a dependency is an expression

Import trace for requested module:
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/instrumentation.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/index.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/index.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/index.js
./node_modules/@prisma/instrumentation/dist/index.js
./node_modules/@sentry/node/build/cjs/integrations/tracing/prisma.js
./node_modules/@sentry/node/build/cjs/index.js
./node_modules/@sentry/nextjs/build/cjs/index.server.js
./lib/logger.ts
./app/api/dashboard/metrics/route.ts

./node_modules/require-in-the-middle/index.js
Critical dependency: require function is used in a way in which dependencies cannot be statically extracted

Import trace for requested module:
./node_modules/require-in-the-middle/index.js
./node_modules/@opentelemetry/instrumentation/build/esm/platform/node/instrumentation.js
./node_modules/@opentelemetry/instrumentation/build/esm/platform/node/index.js
./node_modules/@opentelemetry/instrumentation/build/esm/platform/index.js
./node_modules/@opentelemetry/instrumentation/build/esm/index.js
./node_modules/@sentry/node-core/build/cjs/integrations/http/SentryHttpInstrumentation.js
./node_modules/@sentry/node-core/build/cjs/index.js
./node_modules/@sentry/node/build/cjs/index.js
./node_modules/@sentry/nextjs/build/cjs/index.server.js
./lib/logger.ts
./app/api/dashboard/metrics/route.ts
[2025-07-23T15:30:15.642Z] [DEBUG] Creating new MongoDB connection... 
[2025-07-23T15:30:15.643Z] [DEBUG] MongoDB URI configured: mongodb+srv://***:***@accounting-cluster.nld0j20.mongodb.net/accounting?retryWrites=true&w=majority&appName=accounting-cluster
üéØ Dashboard metrics API called
[2025-07-23T15:30:15.652Z] [INFO] Dashboard metrics API called 
[2025-07-23T15:30:16.080Z] [DEBUG] [MongoDB] Database name extracted from URI: "accounting" 
[2025-07-23T15:30:16.080Z] [DEBUG] [MongoDB] Database name extracted from URI: "accounting" 
[2025-07-23T15:30:16.081Z] [DEBUG] [MongoDB] Database name extracted from URI: "accounting" 
[2025-07-23T15:30:16.106Z] [DEBUG] MongoDB connection verified with ping 
[2025-07-23T15:30:16.308Z] [DEBUG] Reusing cached MongoDB connection 
[2025-07-23T15:30:16.352Z] [DEBUG] Reusing cached MongoDB connection 
‚úÖ Connected to MongoDB for dashboard metrics
[2025-07-23T15:30:16.352Z] [INFO] Connected to MongoDB for dashboard metrics 
üìã Available collections: [ 'ocrResults', 'suppliers', 'supplierQuotes' ]
[2025-07-23T15:30:16.378Z] [INFO] Available collections: [ 'ocrResults', 'suppliers', 'supplierQuotes' ]
üí∞ Calculating total revenue...
Revenue from supplier quotes: ¬•52,800
[2025-07-23T15:30:16.410Z] [INFO] Total revenue calculated: ¬•52,800 
üìÑ Calculating processed documents...
OCR processed documents: 3
Total processed documents: 3
[2025-07-23T15:30:16.434Z] [INFO] Processed documents count: 3 
‚è≥ Calculating pending documents...
Pending supplier quotes: 0
Total pending documents: 0
[2025-07-23T15:30:16.462Z] [INFO] Pending documents count: 0 
üë• Calculating active customers/suppliers...
Active suppliers: 1
Total active customers/suppliers: 1
[2025-07-23T15:30:16.487Z] [INFO] Active customers count: 1 
üìä Fetching recent activities...
Recent activities generated: 7
[2025-07-23T15:30:16.564Z] [INFO] Recent activities count: 7 
‚úÖ Dashboard metrics successfully compiled: {
  totalRevenue: 52800,
  processedDocuments: 3,
  pendingDocuments: 0,
  activeCustomers: 1,
  activitiesCount: 7
}
[2025-07-23T15:30:16.565Z] [INFO] Dashboard metrics successfully compiled {
  totalRevenue: 52800,
  processedDocuments: 3,
  pendingDocuments: 0,
  activeCustomers: 1,
  activitiesCount: 7
}
 GET /api/dashboard/metrics 200 in 2175ms
 ‚ö† ./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/instrumentation.js
Critical dependency: the request of a dependency is an expression

Import trace for requested module:
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/instrumentation.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/index.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/index.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/index.js
./node_modules/@prisma/instrumentation/dist/index.js
./node_modules/@sentry/node/build/cjs/integrations/tracing/prisma.js
./node_modules/@sentry/node/build/cjs/index.js
./node_modules/@sentry/nextjs/build/cjs/index.server.js
./lib/logger.ts
./app/api/dashboard/metrics/route.ts

./node_modules/require-in-the-middle/index.js
Critical dependency: require function is used in a way in which dependencies cannot be statically extracted

Import trace for requested module:
./node_modules/require-in-the-middle/index.js
./node_modules/@opentelemetry/instrumentation/build/esm/platform/node/instrumentation.js
./node_modules/@opentelemetry/instrumentation/build/esm/platform/node/index.js
./node_modules/@opentelemetry/instrumentation/build/esm/platform/index.js
./node_modules/@opentelemetry/instrumentation/build/esm/index.js
./node_modules/@sentry/node-core/build/cjs/integrations/http/SentryHttpInstrumentation.js
./node_modules/@sentry/node-core/build/cjs/index.js
./node_modules/@sentry/node/build/cjs/index.js
./node_modules/@sentry/nextjs/build/cjs/index.server.js
./lib/logger.ts
./app/api/dashboard/metrics/route.ts

warn - Your `content` configuration includes a pattern which looks like it's accidentally matching all of `node_modules` and can cause serious performance issues.
warn - Pattern: `./src/**/*.ts`
warn - See our documentation for recommendations:
warn - https://tailwindcss.com/docs/content-configuration#pattern-recommendations
 ‚ö† ./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/instrumentation.js
Critical dependency: the request of a dependency is an expression

Import trace for requested module:
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/instrumentation.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/index.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/platform/index.js
./node_modules/@prisma/instrumentation/node_modules/@opentelemetry/instrumentation/build/esm/index.js
./node_modules/@prisma/instrumentation/dist/index.js
./node_modules/@sentry/node/build/cjs/integrations/tracing/prisma.js
./node_modules/@sentry/node/build/cjs/index.js
./node_modules/@sentry/nextjs/build/cjs/index.server.js
./lib/logger.ts
./components/ai-chat-dialog.tsx
./app/page.tsx

./node_modules/require-in-the-middle/index.js
Critical dependency: require function is used in a way in which dependencies cannot be statically extracted

Import trace for requested module:
./node_modules/require-in-the-middle/index.js
./node_modules/@sentry/node/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/instrumentation.js
./node_modules/@sentry/node/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/index.js
./node_modules/@sentry/node/node_modules/@opentelemetry/instrumentation/build/esm/platform/index.js
./node_modules/@sentry/node/node_modules/@opentelemetry/instrumentation/build/esm/index.js
./node_modules/@sentry/node/build/cjs/integrations/tracing/postgresjs.js
./node_modules/@sentry/node/build/cjs/index.js
./node_modules/@sentry/nextjs/build/cjs/index.server.js
./lib/logger.ts
./components/ai-chat-dialog.tsx
./app/page.tsx

./node_modules/@opentelemetry/instrumentation/build/esm/platform/node/instrumentation.js
Critical dependency: the request of a dependency is an expression

Import trace for requested module:
./node_modules/@opentelemetry/instrumentation/build/esm/platform/node/instrumentation.js
./node_modules/@opentelemetry/instrumentation/build/esm/platform/node/index.js
./node_modules/@opentelemetry/instrumentation/build/esm/platform/index.js
./node_modules/@opentelemetry/instrumentation/build/esm/index.js
./node_modules/@sentry/node-core/build/cjs/integrations/http/SentryHttpInstrumentation.js
./node_modules/@sentry/node-core/build/cjs/index.js
./node_modules/@sentry/node/build/cjs/index.js
./node_modules/@sentry/nextjs/build/cjs/index.server.js
./lib/logger.ts
./app/api/dashboard/metrics/route.ts

./node_modules/@sentry/node/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/instrumentation.js
Critical dependency: the request of a dependency is an expression

Import trace for requested module:
./node_modules/@sentry/node/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/instrumentation.js
./node_modules/@sentry/node/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/index.js
./node_modules/@sentry/node/node_modules/@opentelemetry/instrumentation/build/esm/platform/index.js
./node_modules/@sentry/node/node_modules/@opentelemetry/instrumentation/build/esm/index.js
./node_modules/@sentry/node/build/cjs/integrations/tracing/postgresjs.js
./node_modules/@sentry/node/build/cjs/index.js
./node_modules/@sentry/nextjs/build/cjs/index.server.js
./lib/logger.ts
./app/api/dashboard/metrics/route.ts

./node_modules/require-in-the-middle/index.js
Critical dependency: require function is used in a way in which dependencies cannot be statically extracted

Import trace for requested module:
./node_modules/require-in-the-middle/index.js
./node_modules/@sentry/node/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/instrumentation.js
./node_modules/@sentry/node/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/index.js
./node_modules/@sentry/node/node_modules/@opentelemetry/instrumentation/build/esm/platform/index.js
./node_modules/@sentry/node/node_modules/@opentelemetry/instrumentation/build/esm/index.js
./node_modules/@sentry/node/build/cjs/integrations/tracing/postgresjs.js
./node_modules/@sentry/node/build/cjs/index.js
./node_modules/@sentry/nextjs/build/cjs/index.server.js
./lib/logger.ts
./app/api/dashboard/metrics/route.ts
 GET / 200 in 7556ms
[2025-07-23T15:31:04.506Z] [DEBUG] [MongoDB] Database name extracted from URI: "accounting" 
[2025-07-23T15:31:04.506Z] [DEBUG] [MongoDB] Database name extracted from URI: "accounting" 
üéØ Dashboard metrics API called
[2025-07-23T15:31:04.508Z] [INFO] Dashboard metrics API called 
[2025-07-23T15:31:04.508Z] [DEBUG] [MongoDB] Database name extracted from URI: "accounting" 
[2025-07-23T15:31:04.531Z] [DEBUG] Reusing cached MongoDB connection 
[2025-07-23T15:31:04.532Z] [DEBUG] Reusing cached MongoDB connection 
[2025-07-23T15:31:04.533Z] [DEBUG] Reusing cached MongoDB connection 
‚úÖ Connected to MongoDB for dashboard metrics
[2025-07-23T15:31:04.533Z] [INFO] Connected to MongoDB for dashboard metrics 
üìã Available collections: [ 'ocrResults', 'suppliers', 'supplierQuotes' ]
[2025-07-23T15:31:04.569Z] [INFO] Available collections: [ 'ocrResults', 'suppliers', 'supplierQuotes' ]
üí∞ Calculating total revenue...
Revenue from supplier quotes: ¬•52,800
[2025-07-23T15:31:04.595Z] [INFO] Total revenue calculated: ¬•52,800 
üìÑ Calculating processed documents...
OCR processed documents: 3
Total processed documents: 3
[2025-07-23T15:31:04.621Z] [INFO] Processed documents count: 3 
‚è≥ Calculating pending documents...
Pending supplier quotes: 0
Total pending documents: 0
[2025-07-23T15:31:04.661Z] [INFO] Pending documents count: 0 
üë• Calculating active customers/suppliers...
Active suppliers: 1
Total active customers/suppliers: 1
[2025-07-23T15:31:04.724Z] [INFO] Active customers count: 1 
üìä Fetching recent activities...
Recent activities generated: 7
[2025-07-23T15:31:05.074Z] [INFO] Recent activities count: 7 
‚úÖ Dashboard metrics successfully compiled: {
  totalRevenue: 52800,
  processedDocuments: 3,
  pendingDocuments: 0,
  activeCustomers: 1,
  activitiesCount: 7
}
[2025-07-23T15:31:05.074Z] [INFO] Dashboard metrics successfully compiled {
  totalRevenue: 52800,
  processedDocuments: 3,
  pendingDocuments: 0,
  activeCustomers: 1,
  activitiesCount: 7
}
 GET /api/dashboard/metrics 200 in 678ms
[?25h
