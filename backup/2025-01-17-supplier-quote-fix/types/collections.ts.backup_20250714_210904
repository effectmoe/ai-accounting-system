import { ObjectId } from 'mongodb';

// 支払い方法
export type PaymentMethod = 'cash' | 'credit_card' | 'bank_transfer' | 'invoice' | 'other';

// 口座種別
export type AccountType = 'checking' | 'savings';

// 請求書ステータス
export type InvoiceStatus = 'draft' | 'sent' | 'paid' | 'overdue' | 'cancelled';

// 見積書ステータス
export type QuoteStatus = 'draft' | 'sent' | 'accepted' | 'rejected' | 'expired' | 'converted';

// 顧客インターフェース
export interface Customer {
  _id?: ObjectId;
  id?: string; // フロントエンド用のIDフィールド
  customerId?: string; // 顧客コード
  companyName: string;
  companyNameKana?: string;
  department?: string;
  postalCode?: string;
  prefecture?: string;
  city?: string;
  address1?: string;
  address2?: string;
  phone?: string;
  fax?: string;
  email?: string;
  website?: string;
  paymentTerms?: number; // 支払いサイト（日数）
  contacts?: Contact[];
  tags?: string[];
  notes?: string;
  isActive?: boolean;
  createdAt?: Date;
  updatedAt?: Date;
}

// 連絡先インターフェース
export interface Contact {
  name: string;
  nameKana?: string;
  title?: string;
  email?: string;
  phone?: string;
  isPrimary?: boolean;
}

// 会社情報インターフェース
export interface CompanyInfo {
  _id?: ObjectId;
  companyName: string;
  companyNameKana?: string;
  registrationNumber?: string;
  postalCode?: string;
  prefecture?: string;
  city?: string;
  address1?: string;
  address2?: string;
  phone?: string;
  fax?: string;
  email?: string;
  website?: string;
  fiscalYearEnd?: string;
  invoiceNumberFormat?: string;
  logoUrl?: string;
  sealUrl?: string;
  isDefault?: boolean;
  createdAt?: Date;
  updatedAt?: Date;
}

// 銀行口座インターフェース
export interface BankAccount {
  _id?: ObjectId;
  bankName: string;
  branchName: string;
  accountType: AccountType;
  accountNumber: string;
  accountName: string;
  accountNameKana?: string;
  swiftCode?: string;
  notes?: string;
  isDefault?: boolean;
  isActive?: boolean;
  createdAt?: Date;
  updatedAt?: Date;
}

// 請求書インターフェース
export interface Invoice {
  _id?: ObjectId;
  invoiceNumber: string;
  customerId: ObjectId;
  customer?: Customer; // Populated field
  issueDate: Date;
  dueDate: Date;
  items: InvoiceItem[];
  subtotal: number;
  taxAmount: number;
  taxRate: number;
  totalAmount: number;
  paymentMethod?: PaymentMethod;
  bankAccountId?: ObjectId;
  bankAccount?: BankAccount; // Populated field
  status: InvoiceStatus;
  notes?: string;
  internalNotes?: string;
  paidDate?: Date;
  paidAmount?: number;
  isGeneratedByAI?: boolean;
  aiGenerationMetadata?: {
    source?: string;
    confidence?: number;
    timestamp?: Date;
  };
  aiConversationId?: string; // AI会話履歴のID
  createdAt?: Date;
  updatedAt?: Date;
}

// 請求書項目インターフェース
export interface InvoiceItem {
  itemName: string;
  description?: string;
  quantity: number;
  unitPrice: number;
  amount: number;
  taxRate?: number;
  taxAmount?: number;
  notes?: string;
}

// 見積書インターフェース
export interface Quote {
  _id?: ObjectId;
  quoteNumber: string;
  customerId: ObjectId;
  customer?: Customer; // Populated field
  issueDate: Date;
  validityDate: Date; // 見積書有効期限
  items: QuoteItem[];
  subtotal: number;
  taxAmount: number;
  taxRate: number;
  totalAmount: number;
  paymentMethod?: PaymentMethod;
  bankAccountId?: ObjectId;
  bankAccount?: BankAccount; // Populated field
  status: QuoteStatus;
  notes?: string;
  internalNotes?: string;
  acceptedDate?: Date;
  rejectedDate?: Date;
  expiredDate?: Date;
  convertedToInvoiceId?: ObjectId; // 請求書に変換された場合のID
  convertedToInvoiceDate?: Date;
  isGeneratedByAI?: boolean;
  aiGenerationMetadata?: {
    source?: string;
    confidence?: number;
    timestamp?: Date;
  };
  aiConversationId?: string; // AI会話履歴のID
  companySnapshot?: {
    companyName: string;
    address: string;
    phone?: string;
    email?: string;
    invoiceRegistrationNumber?: string;
    stampImage?: string;
  };
  createdAt?: Date;
  updatedAt?: Date;
}

// 見積書項目インターフェース
export interface QuoteItem {
  itemName: string;
  description?: string;
  quantity: number;
  unitPrice: number;
  amount: number;
  taxRate?: number;
  taxAmount?: number;
  notes?: string;
}

// 商品インターフェース
export interface Product {
  _id?: ObjectId;
  productCode: string;
  productName: string;
  productNameKana?: string;
  description?: string;
  category?: string;
  unitPrice: number;
  taxRate?: number;
  unit?: string;
  isActive?: boolean;
  tags?: string[];
  notes?: string;
  createdAt?: Date;
  updatedAt?: Date;
}

// ドキュメントインターフェース
export interface Document {
  _id?: ObjectId;
  documentNumber: string;
  documentType: 'invoice' | 'receipt' | 'quotation' | 'purchase_order';
  issueDate: Date;
  dueDate?: Date;
  customerId?: ObjectId;
  customerName?: string;
  items: DocumentItem[];
  subtotal: number;
  taxAmount: number;
  totalAmount: number;
  status: 'draft' | 'sent' | 'paid' | 'cancelled';
  notes?: string;
  attachments?: string[];
  ocrResultId?: string;
  createdAt?: Date;
  updatedAt?: Date;
}

// ドキュメント項目インターフェース
export interface DocumentItem {
  description: string;
  quantity: number;
  unitPrice: number;
  amount: number;
  taxRate?: number;
}

// OCR結果インターフェース
export interface OCRResult {
  _id?: ObjectId;
  fileName: string;
  fileUrl?: string;
  gdriveFileId?: string;
  processedAt: Date;
  vendor?: string;
  documentDate?: Date;
  totalAmount?: number;
  taxAmount?: number;
  items?: OCRItem[];
  rawText?: string;
  confidence?: number;
  status: 'pending' | 'processed' | 'failed';
  errorMessage?: string;
  linkedDocumentId?: ObjectId;
  createdAt?: Date;
  updatedAt?: Date;
}

// OCR項目インターフェース
export interface OCRItem {
  description: string;
  quantity?: number;
  unitPrice?: number;
  amount: number;
}

// 仕訳インターフェース
export interface JournalEntry {
  _id?: ObjectId;
  companyId: string;
  journalNumber: string;
  entryDate: Date;
  description: string;
  status: 'draft' | 'confirmed' | 'posted';
  sourceType?: 'manual' | 'ocr' | 'import';
  sourceDocumentId?: ObjectId;
  lines: JournalLine[];
  attachments?: string[];
  notes?: string;
  createdBy?: string;
  approvedBy?: string;
  approvedAt?: Date;
  createdAt?: Date;
  updatedAt?: Date;
}

// 仕訳明細インターフェース
export interface JournalLine {
  accountCode: string;
  accountName: string;
  debitAmount: number;
  creditAmount: number;
  taxRate?: number;
  taxAmount?: number;
  isTaxIncluded?: boolean;
  description?: string;
  departmentCode?: string;
  projectCode?: string;
}

// 勘定科目インターフェース
export interface Account {
  _id?: ObjectId;
  accountCode: string;
  accountName: string;
  accountNameKana?: string;
  accountType: 'asset' | 'liability' | 'equity' | 'revenue' | 'expense';
  parentAccountCode?: string;
  level: number;
  isActive?: boolean;
  taxRate?: number;
  description?: string;
  createdAt?: Date;
  updatedAt?: Date;
}

// ソート関連の型定義
export type SortableField = 'customerId' | 'companyName' | 'companyNameKana' | 'department' | 'prefecture' | 'city' | 'email' | 'paymentTerms' | 'createdAt' | 'primaryContactName' | 'primaryContactNameKana';
export type ProductSortableField = 'productCode' | 'productName' | 'category' | 'unitPrice' | 'stockQuantity' | 'taxRate' | 'createdAt';
export type SortOrder = 'asc' | 'desc';

// フィルター関連の型定義
export interface FilterState {
  isActive?: boolean;
  prefecture?: string;
  city?: string;
  paymentTermsMin?: number;
  paymentTermsMax?: number;
  createdAtStart?: string; // YYYY-MM-DD
  createdAtEnd?: string;   // YYYY-MM-DD
}

// 商品フィルター用の型定義
export interface ProductFilterState {
  isActive?: boolean;
  category?: string;
  unitPriceMin?: number;
  unitPriceMax?: number;
  stockQuantityMin?: number;
  stockQuantityMax?: number;
  taxRates?: number[]; // 税率のリスト（複数選択可能）
  createdAtStart?: string; // YYYY-MM-DD
  createdAtEnd?: string;   // YYYY-MM-DD
}

// 商品インターフェースの拡張
export interface Product {
  _id?: ObjectId;
  id?: string; // フロントエンド用のIDフィールド
  productCode: string;
  productName: string;
  productNameKana?: string;
  description?: string;
  category?: string;
  unitPrice: number;
  taxRate?: number;
  unit?: string;
  stockQuantity?: number; // 在庫数を追加
  isActive?: boolean;
  tags?: string[];
  notes?: string;
  createdAt?: Date;
  updatedAt?: Date;
}