#!/usr/bin/env tsx

import { mastra } from '../src/mastra';
import { logger } from '../lib/logger';

async function refactorMCPCode() {
  console.log('üîß MCPÁµ±Âêà„Ç≥„Éº„Éâ„ÅÆ„É™„Éï„Ç°„ÇØ„Çø„É™„É≥„Ç∞„ÇíÈñãÂßã„Åó„Åæ„Åô...\n');
  
  const filesToRefactor = [
    '/src/mastra/mcp/mcp-manager.ts',
    '/src/mastra/mcp/mcp-client.ts',
    '/src/mastra/mcp/mcp-servers.ts',
    '/src/mastra/mcp/mcp-tool-adapter.ts',
    '/src/mastra/agents/tools/mcp-accounting-tools.ts',
    '/src/mastra/agents/tools/mcp-tax-tools.ts',
  ];
  
  const refactoringGuidelines = `
‰ª•‰∏ã„ÅÆ„É™„Éï„Ç°„ÇØ„Çø„É™„É≥„Ç∞Âü∫Ê∫ñ„Å´Âæì„Å£„Å¶„ÄÅMCP„Ç≥„Éº„Éâ„ÇíÊîπÂñÑ„Åó„Å¶„Åè„Å†„Åï„ÅÑÔºö

1. **ÂûãÂÆâÂÖ®ÊÄß„ÅÆÂêë‰∏ä**
   - anyÂûã„ÇíÂÖ∑‰ΩìÁöÑ„Å™ÂûãÂÆöÁæ©„Å´ÁΩÆ„ÅçÊèõ„Åà„Çã
   - „Ç§„É≥„Çø„Éº„Éï„Çß„Éº„Çπ„Å®„Çø„Ç§„Éó„ÇíÊòéÁ¢∫„Å´ÂÆöÁæ©„Åô„Çã
   - „Ç®„É©„ÉºÂá¶ÁêÜ„ÅÆÂûã„ÇíÊòéÁ¢∫„Å´„Åô„Çã

2. **„Ç≥„Éº„Éâ„ÅÆÊï¥ÁêÜ**
   - ÈáçË§á„Ç≥„Éº„Éâ„ÇíÂâäÈô§„Åó„ÄÅÂÖ±ÈÄöÈñ¢Êï∞„Å´ÊäΩÂá∫„Åô„Çã
   - Èï∑„ÅÑ„É°„ÇΩ„ÉÉ„Éâ„ÇíÂ∞è„Åï„Å™Èñ¢Êï∞„Å´ÂàÜÂâ≤„Åô„Çã
   - ÈÅ©Âàá„Å™ÂêçÂâç‰ªò„Åë„ÇíË°å„ÅÜ

3. **„Ç®„É©„Éº„Éè„É≥„Éâ„É™„É≥„Ç∞„ÅÆÊîπÂñÑ**
   - try-catch„Éñ„É≠„ÉÉ„ÇØ„ÇíÈÅ©Âàá„Å´ÈÖçÁΩÆ„Åô„Çã
   - „Ç®„É©„Éº„É°„ÉÉ„Çª„Éº„Ç∏„ÇíÊòéÁ¢∫„Å´„Åô„Çã
   - „Ç´„Çπ„Çø„É†„Ç®„É©„Éº„ÇØ„É©„Çπ„Çí‰ΩøÁî®„Åô„Çã

4. **„Éë„Éï„Ç©„Éº„Éû„É≥„Çπ„ÅÆÊúÄÈÅ©Âåñ**
   - ‰∏çË¶Å„Å™Âá¶ÁêÜ„ÇíÂâäÈô§„Åô„Çã
   - ÈùûÂêåÊúüÂá¶ÁêÜ„ÇíÈÅ©Âàá„Å´ÂÆüË£Ö„Åô„Çã
   - „É™„ÇΩ„Éº„Çπ„ÅÆÈÅ©Âàá„Å™ÁÆ°ÁêÜÔºàÊé•Á∂ö„ÅÆÈñãÊîæ„Å™„Å©Ôºâ

5. **‰øùÂÆàÊÄß„ÅÆÂêë‰∏ä**
   - ÈÅ©Âàá„Å™„Ç≥„É°„É≥„Éà„ÇíËøΩÂä†„Åô„ÇãÔºàÊó•Êú¨Ë™ûÔºâ
   - Ë®≠ÂÆö„ÅÆÂ§ñÈÉ®Âåñ
   - „ÉÜ„Çπ„Çø„Éì„É™„ÉÜ„Ç£„ÅÆÂêë‰∏ä

6. **MCP„Çµ„Éº„Éê„ÉºÂõ∫Êúâ„ÅÆÊîπÂñÑ**
   - ÂêÑMCP„Çµ„Éº„Éê„Éº„ÅÆÁâπÊÄß„ÇíËÄÉÊÖÆ„Åó„ÅüÊúÄÈÅ©Âåñ
   - „ÉÑ„Éº„É´Âêç„ÅÆ‰∏ÄË≤´ÊÄßÁ¢∫‰øù
   - Áí∞Â¢ÉÂ§âÊï∞„ÅÆÈÅ©Âàá„Å™ÁÆ°ÁêÜ
  `;
  
  try {
    // „É™„Éï„Ç°„ÇØ„Çø„É™„É≥„Ç∞„Ç®„Éº„Ç∏„Çß„É≥„Éà„Çí‰ΩøÁî®
    const result = await mastra.agents.refactorAgent.execute({
      prompt: `
‰ª•‰∏ã„ÅÆMCPÁµ±Âêà„Ç≥„Éº„Éâ„Çí„É™„Éï„Ç°„ÇØ„Çø„É™„É≥„Ç∞„Åó„Å¶„Åè„Å†„Åï„ÅÑ„ÄÇ

ÂØæË±°„Éï„Ç°„Ç§„É´:
${filesToRefactor.map(f => `- ${f}`).join('\n')}

„É™„Éï„Ç°„ÇØ„Çø„É™„É≥„Ç∞Âü∫Ê∫ñ:
${refactoringGuidelines}

ÂêÑ„Éï„Ç°„Ç§„É´„Åî„Å®„Å´‰ª•‰∏ã„ÇíÂÆüË°å„Åó„Å¶„Åè„Å†„Åï„ÅÑÔºö
1. ÁèæÂú®„ÅÆ„Ç≥„Éº„Éâ„ÇíË™≠„ÅøËæº„ÇÄ
2. ÂïèÈ°åÁÇπ„ÇíÁâπÂÆö„Åô„Çã
3. „É™„Éï„Ç°„ÇØ„Çø„É™„É≥„Ç∞Ê°à„Çí‰ΩúÊàê„Åô„Çã
4. „Ç≥„Éº„Éâ„ÇíÊîπÂñÑ„Åô„Çã
5. Â§âÊõ¥ÂÜÖÂÆπ„ÇíË™¨Êòé„Åô„Çã

Áâπ„Å´Ê≥®ÊÑè„Åô„Åπ„ÅçÁÇπÔºö
- anyÂûã„ÅÆ‰ΩøÁî®„ÇíÈÅø„Åë„Çã
- „Ç®„É©„Éº„Éè„É≥„Éâ„É™„É≥„Ç∞„ÇíÂº∑Âåñ„Åô„Çã
- Êó•Êú¨Ë™û„Ç≥„É°„É≥„Éà„ÅßË™¨Êòé„ÇíÂÖÖÂÆü„Åï„Åõ„Çã
- MCPÂõ∫Êúâ„ÅÆÊúÄÈÅ©Âåñ„ÇíË°å„ÅÜ
      `,
    });
    
    console.log('‚úÖ „É™„Éï„Ç°„ÇØ„Çø„É™„É≥„Ç∞ÂÆå‰∫Ü');
    console.log('ÁµêÊûú:', result);
    
    return result;
  } catch (error) {
    logger.error('„É™„Éï„Ç°„ÇØ„Çø„É™„É≥„Ç∞„Ç®„É©„Éº:', error);
    throw error;
  }
}

// „É°„Ç§„É≥ÂÆüË°å
if (require.main === module) {
  refactorMCPCode()
    .then(() => {
      console.log('\n‚úÖ „É™„Éï„Ç°„ÇØ„Çø„É™„É≥„Ç∞Âá¶ÁêÜ„ÅåÂÆå‰∫Ü„Åó„Åæ„Åó„Åü');
      process.exit(0);
    })
    .catch(error => {
      console.error('\n‚ùå „Ç®„É©„Éº:', error);
      process.exit(1);
    });
}